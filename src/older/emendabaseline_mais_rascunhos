# -*- coding: utf-8 -*-
"""
Created on Thu Apr 28 13:49:30 2016

@author: Madu
"""

import numpy as np
import matplotlib.pyplot as pl 
from scipy.optimize import root
from numpy import cosh, zeros_like, mgrid, zeros

def gaus(x):
    return np.exp(-x**2)

def func2(x):
    f = [x[0] * np.cos(x[1]) - 4,
         x[1]*x[0] - x[1] - 5]
    df = np.array([[np.cos(x[1]), -x[0] * np.sin(x[1])],
                   [x[1], x[0] - 1]])
    return f, df

def fb(b):
    y = [350, 402, 479, 500, 391, 279, 200]
    dy = y[-1]-y[0]
    s = 0
    sl = []
    for i in range(1,len(y)-2):
        s += y[i]-b[i-1]
        sl.append(s)
    f = []
    ln1 = y[-2]-y[-1]
    for i in range(0,len(y)-3):
        f.append( sl[i] / (sl[-1]+ln1) * dy + y[0] - b[i] )
    return f

a = np.exp(7)
print(a)

n = 10
x = []
yyy = []
for i in np.arange(-3, 3, 0.13):
    x.append( i )
    yyy.append(gaus(i))

pl.plot( x, yyy )

sol = root(func2, [1, 1], jac=True, method='lm')
print( sol.x )

sol_fb = root(fb, [325, 300, 275, 250], jac=False, method='lm')
print( 'raiz fb: ', sol_fb.x )

# parameters
nx, ny = 75, 75
hx, hy = 1./(nx-1), 1./(ny-1)

P_left, P_right = 0, 0
P_top, P_bottom = 1, 0

def residual(P):
   d2x = zeros_like(P)
   d2y = zeros_like(P)

   d2x[1:-1] = (P[2:]   - 2*P[1:-1] + P[:-2]) / hx/hx
   d2x[0]    = (P[1]    - 2*P[0]    + P_left)/hx/hx
   d2x[-1]   = (P_right - 2*P[-1]   + P[-2])/hx/hx

   d2y[:,1:-1] = (P[:,2:] - 2*P[:,1:-1] + P[:,:-2])/hy/hy
   d2y[:,0]    = (P[:,1]  - 2*P[:,0]    + P_bottom)/hy/hy
   d2y[:,-1]   = (P_top   - 2*P[:,-1]   + P[:,-2])/hy/hy

   return d2x + d2y + 5*cosh(P).mean()**2

# solve
guess = zeros((nx, ny), float)
sol = root(residual, guess, method='krylov', options={'disp': True})
#sol = root(residual, guess, method='broyden2', options={'disp': True, 'max_rank': 50})
#sol = root(residual, guess, method='anderson', options={'disp': True, 'M': 10})
print('Residual: %g' % abs(residual(sol.x)).max())

# visualize
x, y = mgrid[0:1:(nx*1j), 0:1:(ny*1j)]
pl.pcolor(x, y, sol.x)
pl.colorbar()
pl.show()

# AQUI, finalmente a emenda de baseline

